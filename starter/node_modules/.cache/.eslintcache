[{"C:\\Users\\AA Team\\Desktop\\front end\\my reads project\\nd0191-c1-myreads\\starter\\src\\index.js":"1","C:\\Users\\AA Team\\Desktop\\front end\\my reads project\\nd0191-c1-myreads\\starter\\src\\components\\BooksAPI.js":"2","C:\\Users\\AA Team\\Desktop\\front end\\my reads project\\nd0191-c1-myreads\\starter\\src\\components\\BookShelf.js":"3","C:\\Users\\AA Team\\Desktop\\front end\\my reads project\\nd0191-c1-myreads\\starter\\src\\components\\Book.js":"4","C:\\Users\\AA Team\\Desktop\\front end\\my reads project\\nd0191-c1-myreads\\starter\\src\\App.js":"5","C:\\Users\\AA Team\\Desktop\\front end\\my reads project\\nd0191-c1-myreads\\starter\\src\\components\\MainShelf.js":"6","C:\\Users\\AA Team\\Desktop\\front end\\my reads project\\nd0191-c1-myreads\\starter\\src\\components\\TitleApp.js":"7"},{"size":230,"mtime":1666557271290,"results":"8","hashOfConfig":"9"},{"size":1097,"mtime":1666542809016,"results":"10","hashOfConfig":"9"},{"size":629,"mtime":1666557949590,"results":"11","hashOfConfig":"9"},{"size":1132,"mtime":1666557949590,"results":"12","hashOfConfig":"9"},{"size":3003,"mtime":1666558370297,"results":"13","hashOfConfig":"9"},{"size":886,"mtime":1666558409089,"results":"14","hashOfConfig":"9"},{"size":176,"mtime":1666557271290,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"n4d7ld",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\AA Team\\Desktop\\front end\\my reads project\\nd0191-c1-myreads\\starter\\src\\index.js",[],["32","33"],"C:\\Users\\AA Team\\Desktop\\front end\\my reads project\\nd0191-c1-myreads\\starter\\src\\components\\BooksAPI.js",[],"C:\\Users\\AA Team\\Desktop\\front end\\my reads project\\nd0191-c1-myreads\\starter\\src\\components\\BookShelf.js",[],"C:\\Users\\AA Team\\Desktop\\front end\\my reads project\\nd0191-c1-myreads\\starter\\src\\components\\Book.js",[],"C:\\Users\\AA Team\\Desktop\\front end\\my reads project\\nd0191-c1-myreads\\starter\\src\\App.js",["34","35","36","37"],"import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport TitleApp from \"./components/TitleApp\";\r\nimport MainShelf from \"./components/MainShelf\";\r\nimport * as BooksAPI from \"./components/BooksAPI\";\r\nimport Book from \"./components/Book\";\r\n\r\nconst App = () => {\r\n  const [showSearchPage, setShowSearchpage] = useState(false);\r\n  const [oneBook, setOneBooks] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [bookFound, setBookFound] = useState([]);\r\n  const [updatedFromSearch, setUpdatedFromSearch] = useState([]);\r\n\r\n  \r\n  useEffect(() => {\r\n    BooksAPI.getAll().then((data) => {\r\n     \r\n      setOneBooks(data);\r\n    });\r\n  }, []);\r\n\r\n \r\n  useEffect(() => {\r\n    let on = true;\r\n    if (search) {\r\n      BooksAPI.search(search).then((data) => {\r\n        if (data.error) {\r\n          setBookFound([]);\r\n        } else {\r\n          if (on) {\r\n            console.log(data);\r\n            setBookFound(data);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    return () => {\r\n      on = false;\r\n      setBookFound([]);\r\n    };\r\n  }, [search]);\r\n\r\n  \r\n  function updateShelf(currentBook, newShelf) {\r\n    const updatedShelf = oneBook.map((book) => {\r\n      return book.id === currentBook.id && (currentBook.shelf = newShelf)\r\n        ? currentBook\r\n        : book;\r\n   \r\n    });\r\n    setOneBooks(updatedShelf);\r\n    BooksAPI.update(currentBook, newShelf).then((data) => {\r\n      console.log(data);\r\n      return data;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {showSearchPage ? (\r\n        <div className=\"search-books\">\r\n          <div className=\"search-books-bar\">\r\n            <a\r\n              className=\"close-search\"\r\n              onClick={() => setShowSearchpage(!showSearchPage)}\r\n            >\r\n              Close\r\n            </a>\r\n            <div className=\"search-books-input-wrapper\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search by title, author, or ISBN\"\r\n                value={search}\r\n                onChange={(event) => setSearch(event.target.value)}\r\n              />\r\n            \r\n            </div>\r\n          </div>\r\n          <div className=\"search-books-results\">\r\n            <ol className=\"books-grid\">\r\n              {bookFound.map((book) => (\r\n                <li key={book.id}>\r\n                  <Book\r\n                    book={book}\r\n                    updateShelf={updateShelf}\r\n                    shelfName=\"Currently Reading\"\r\n                  />\r\n                </li>\r\n              ))}\r\n            </ol>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"list-books\">\r\n          <TitleApp />\r\n          <div className=\"list-books-content\">\r\n            <MainShelf books={oneBook} updateShelf={updateShelf} />\r\n          </div>\r\n\r\n          <div className=\"open-search\">\r\n            <a onClick={() => setShowSearchpage(!showSearchPage)}>Add a book</a>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\AA Team\\Desktop\\front end\\my reads project\\nd0191-c1-myreads\\starter\\src\\components\\MainShelf.js",[],"C:\\Users\\AA Team\\Desktop\\front end\\my reads project\\nd0191-c1-myreads\\starter\\src\\components\\TitleApp.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":13,"column":10,"nodeType":"44","messageId":"45","endLine":13,"endColumn":27},{"ruleId":"42","severity":1,"message":"46","line":13,"column":29,"nodeType":"44","messageId":"45","endLine":13,"endColumn":49},{"ruleId":"47","severity":1,"message":"48","line":64,"column":13,"nodeType":"49","endLine":67,"endColumn":14},{"ruleId":"47","severity":1,"message":"48","line":102,"column":13,"nodeType":"49","endLine":102,"endColumn":67},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'updatedFromSearch' is assigned a value but never used.","Identifier","unusedVar","'setUpdatedFromSearch' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]