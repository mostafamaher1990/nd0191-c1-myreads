{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AA Team\\\\Desktop\\\\front end\\\\my reads project\\\\nd0191-c1-myreads\\\\starter\\\\src\\\\BookSearch.js\",\n    _s = $RefreshSig$();\n\nimport react from 'react';\nimport { PropTypes } from \"prop-types\";\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Book from './Book';\nimport * as BooksAPI from '../data/BooksAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookSearch = props => {\n  _s();\n\n  BookSearch.PropTypes = {\n    updateShelf: PropTypes.func.isRequired,\n    books: PropTypes.array.isRequired\n  };\n  const [query, setQuery] = useState('');\n  const [searchedBooks, setsearchedBooks] = useState([]);\n\n  const updateQuery = inputquery => {\n    if (inputquery !== \"\") {\n      setQuery(inputquery);\n    } else {\n      alert(\"Please enter a search term\");\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-bar\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          className: \"close-search\",\n          to: \"/\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-books-input-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search by title, author, or ISBN\",\n            onChange: event => updateQuery(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-results\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"books-grid\",\n          children: searchedBooks && searchedBooks.length > 0 && searchedBooks.map(book => /*#__PURE__*/_jsxDEV(Book, {\n            Key: book.id,\n            onUpdateShelf: Props.onUpdateShelf,\n            bookItem: book\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 14\n    }, this);\n  };\n};\n\n_s(BookSearch, \"A60eSZhvM6m5Shk/O0qnNs/rw98=\");\n\n_c = BookSearch;\nexport default BookSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookSearch\");","map":{"version":3,"sources":["C:/Users/AA Team/Desktop/front end/my reads project/nd0191-c1-myreads/starter/src/BookSearch.js"],"names":["react","PropTypes","useState","Link","Book","BooksAPI","BookSearch","props","updateShelf","func","isRequired","books","array","query","setQuery","searchedBooks","setsearchedBooks","updateQuery","inputquery","alert","event","target","value","length","map","book","id","Props","onUpdateShelf"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,KAAKC,QAAZ,MAA0B,kBAA1B;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1BD,EAAAA,UAAU,CAACL,SAAX,GAAuB;AACnBO,IAAAA,WAAW,EAAEP,SAAS,CAACQ,IAAV,CAAeC,UADT;AAEnBC,IAAAA,KAAK,EAAEV,SAAS,CAACW,KAAV,CAAgBF;AAFJ,GAAvB;AAIA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAlD;;AAIJ,QAAMe,WAAW,GAAIC,UAAD,IAAgB;AAChC,QAAIA,UAAU,KAAG,EAAjB,EAAqB;AACjBJ,MAAAA,QAAQ,CAACI,UAAD,CAAR;AACH,KAFD,MAGI;AACAC,MAAAA,KAAK,CAAC,4BAAD,CAAL;AACH;;AAEC,wBAAO;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACL;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCAEI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,cAAhB;AAA+B,UAAA,EAAE,EAAC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKE;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,iCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,kCAFd;AAGE,YAAA,QAAQ,EAAGC,KAAD,IAAWH,WAAW,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd;AAHlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADK,eAeL;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBACGP,aAAa,IACdA,aAAa,CAACQ,MAAd,GAAuB,CADtB,IAEDR,aAAa,CAACS,GAAd,CAAmBC,IAAD,iBAElB,QAAC,IAAD;AACA,YAAA,GAAG,EAAEA,IAAI,CAACC,EADV;AAEA,YAAA,aAAa,EAAGC,KAAK,CAACC,aAFtB;AAGA,YAAA,QAAQ,EAAEH;AAHV;AAAA;AAAA;AAAA;AAAA,kBAFA;AAHF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfK;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AA+BJ,GAvCF;AAuCG,CAjDH;;GAAMnB,U;;KAAAA,U;AAmDL,eAAeA,UAAf","sourcesContent":["import react from 'react';\r\nimport { PropTypes } from \"prop-types\";\r\nimport {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Book from './Book';\r\nimport * as BooksAPI from '../data/BooksAPI';\r\n\r\nconst BookSearch = (props) => {\r\n    BookSearch.PropTypes = {\r\n        updateShelf: PropTypes.func.isRequired,\r\n        books: PropTypes.array.isRequired\r\n    }\r\n    const [query, setQuery] = useState('');\r\n    const [searchedBooks, setsearchedBooks] = useState([]);\r\n\r\n\r\n\r\nconst updateQuery = (inputquery) => {\r\n    if (inputquery!==\"\") {\r\n        setQuery(inputquery);\r\n    }\r\n    else{\r\n        alert(\"Please enter a search term\");\r\n    }\r\n\r\n      return <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          \r\n            <Link className=\"close-search\" to='/'          >\r\n            Close\r\n         </Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by title, author, or ISBN\"\r\n              onChange={(event) => updateQuery(event.target.value)}\r\n\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\">\r\n            {searchedBooks &&\r\n            searchedBooks.length > 0 &&\r\n            searchedBooks.map((book) =>\r\n            (\r\n            <Book\r\n            Key={book.id}\r\n            onUpdateShelf ={Props.onUpdateShelf}\r\n            bookItem={book}\r\n            />\r\n            ))}\r\n\r\n          </ol>\r\n        </div>\r\n      </div>\r\n }}\r\n\r\n export default BookSearch;"]},"metadata":{},"sourceType":"module"}